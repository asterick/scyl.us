#pragma once

#define VRAM_WIDTH			1024
#define VRAM_HEIGHT			512

enum GPUCommand {
	GPU_TEXSIZE_COMMAND 	= 0x10000000,
	GPU_DRAWCONFIG_COMMAND 	= 0x20000000,
	GPU_CLUT_COMMAND 		= 0x30000000,
	GPU_TEXPOS_COMMAND 		= 0x40000000,
	GPU_DRAWPOS_COMMAND 	= 0x50000000,
	GPU_CLIPPOS_COMMAND 	= 0x60000000,
	GPU_CLIPSIZE_COMMAND 	= 0x70000000,
	GPU_VIEWSTART_COMMAND 	= 0x80000000,
 	GPU_GETDATA_COMMAND 	= 0x90000000,
 	GPU_SETDATA_COMMAND 	= 0xA0000000,
};

#define GPU_COLOR(r,g,b)					(((r << 16) & 0xFF0000)|((g << 8) & 0xFF00)|(b & 0xFF))

#define GPU_POINT_X_MASK	0x0000FFFF
#define GPU_POINT_X_SHIFT	0
#define GPU_POINT_Y_MASK	0xFFFF0000
#define GPU_POINT_Y_SHIFT	16

#define GPU_POINT(x, y)						(((y << GPU_POINT_Y_SHIFT) & GPU_POINT_Y_MASK) | ((x << GPU_POINT_X_SHIFT) & GPU_POINT_X_MASK))

// Configure masking and texture 'size'
#define GPU_TEXSIZE_MASK_X_SHIFT				0
#define GPU_TEXSIZE_MASK_X_MASK					0x00001F
#define GPU_TEXSIZE_MASK_Y_SHIFT				5
#define GPU_TEXSIZE_MASK_Y_MASK					0x0003E0
#define GPU_TEXSIZE_OFF_X_SHIFT					10
#define GPU_TEXSIZE_OFF_X_MASK					0x007C00
#define GPU_TEXSIZE_OFF_Y_SHIFT					15
#define GPU_TEXSIZE_OFF_Y_MASK					0x0F8000

#define GPU_TEXSIZE(maskx, masky, offx, offy)	(GPU_TEXSIZE_COMMAND | \
	((maskx << GPU_TEXSIZE_MASK_X_SHIFT) & GPU_TEXSIZE_MASK_X_MASK) | \
 	((masky << GPU_TEXSIZE_MASK_Y_SHIFT) & GPU_TEXSIZE_MASK_Y_MASK) | \
 	((offx << GPU_TEXSIZE_OFF_X_SHIFT) & GPU_TEXSIZE_OFF_X_MASK) | \
 	((offy << GPU_TEXSIZE_OFF_Y_SHIFT) & GPU_TEXSIZE_OFF_Y_MASK))

// Configuring mask, dither and blending
#define GPU_DRAWCONFIG_DITHER					0x00800000
#define GPU_DRAWCONFIG_SETMASK					0x00400000
#define GPU_DRAWCONFIG_USEMASK					0x00200000
#define GPU_DRAWCONFIG_SET_SRC_MASK				0x0000F000
#define GPU_DRAWCONFIG_SET_SRC_SHIFT			12
#define GPU_DRAWCONFIG_SET_DST_MASK				0x00000F00
#define GPU_DRAWCONFIG_SET_DST_SHIFT			8
#define GPU_DRAWCONFIG_RESET_SRC_MASK			0x000000F0
#define GPU_DRAWCONFIG_RESET_SRC_SHIFT			4
#define GPU_DRAWCONFIG_RESET_DST_MASK			0x0000000F
#define GPU_DRAWCONFIG_RESET_DST_SHIFT			0

enum GPUDrawConfig_Coff {
	GPU_DRAWCONFIG_POS_1_000 = 0,
	GPU_DRAWCONFIG_POS_0_500 = 1,
	GPU_DRAWCONFIG_POS_0_250 = 2,
	GPU_DRAWCONFIG_POS_0_125 = 3,
	GPU_DRAWCONFIG_POS_0_000 = 4,
	GPU_DRAWCONFIG_POS_0_750 = 6,
	GPU_DRAWCONFIG_POS_0_875 = 7,
	GPU_DRAWCONFIG_NEG_1_000 = 8,
	GPU_DRAWCONFIG_NEG_0_500 = 9,
	GPU_DRAWCONFIG_NEG_0_250 = 10,
	GPU_DRAWCONFIG_NEG_0_125 = 11,
	GPU_DRAWCONFIG_NEG_0_000 = 12,
	GPU_DRAWCONFIG_NEG_0_750 = 14,
	GPU_DRAWCONFIG_NEG_0_875 = 15
};

#define GPU_DRAWCONFIG(a,b,c,d)					(GPU_DRAWCONFIG_COMMAND | \
		((a << GPU_DRAWCONFIG_SET_SRC_SHIFT) & GPU_DRAWCONFIG_SET_SRC_MASK) | \
		((b << GPU_DRAWCONFIG_SET_DST_SHIFT) & GPU_DRAWCONFIG_SET_DST_MASK) | \
		((c << GPU_DRAWCONFIG_RESET_SRC_SHIFT) & GPU_DRAWCONFIG_RESET_SRC_MASK) | \
		((d << GPU_DRAWCONFIG_RESET_DST_SHIFT) & GPU_DRAWCONFIG_RESET_DST_MASK))

// CLUT Settings
enum GPUClut_Mode {
	GPU_CLUT_1BPP = 0x000000,
	GPU_CLUT_2BPP = 0x100000,
	GPU_CLUT_4BPP = 0x200000,
	GPU_CLUT_8BPP = 0x300000,
	GPU_CLUT_DISABLED = 0x400000
};

#define GPU_CLUT_MODE_MASK 		0xF00000
#define GPU_CLUT_MODE_SHIFT 	20
#define GPU_CLUT_X_MASK			0x3FF
#define GPU_CLUT_X_SHIFT		0
#define GPU_CLUT_Y_MASK			0xFFC00
#define GPU_CLUT_Y_SHIFT		10

#define GPU_CLUT(mode, x, y)	(GPU_CLUT_COMMAND | \
		mode | \
		((x << GPU_CLUT_X_SHIFT) & GPU_CLUT_X_MASK) | \
		((y << GPU_CLUT_Y_SHIFT) & GPU_CLUT_Y_MASK) )

// Positions
#define GPU_TEXPOS_X_MASK		0x03F
#define GPU_TEXPOS_X_SHIFT		0
#define GPU_TEXPOS_Y_MASK		0xFC0
#define GPU_TEXPOS_Y_SHIFT		6

#define GPU_TEXPOS(x, y)		(GPU_TEXPOS_COMMAND | \
		((x << GPU_TEXPOS_X_SHIFT) & GPU_TEXPOS_X_MASK) | \
		((y << GPU_TEXPOS_Y_SHIFT) & GPU_TEXPOS_Y_MASK) )

#define GPU_DRAWPOS_X_MASK		0x3FF
#define GPU_DRAWPOS_X_SHIFT		0
#define GPU_DRAWPOS_Y_MASK		0xFFC00
#define GPU_DRAWPOS_Y_SHIFT		10

#define GPU_DRAWPOS(x, y)		(GPU_DRAWPOS_COMMAND | \
		((x << GPU_DRAWPOS_X_SHIFT) & GPU_DRAWPOS_X_MASK) | \
		((y << GPU_DRAWPOS_Y_SHIFT) & GPU_DRAWPOS_Y_MASK) )

#define GPU_CLIPPOS_X_MASK		0x3FF
#define GPU_CLIPPOS_X_SHIFT		0
#define GPU_CLIPPOS_Y_MASK		0xFFC00
#define GPU_CLIPPOS_Y_SHIFT		10

#define GPU_CLIPPOS(x, y)		(GPU_CLIPPOS_COMMAND | \
		((x << GPU_CLIPPOS_X_SHIFT) & GPU_CLIPPOS_X_MASK) | \
		((y << GPU_CLIPPOS_Y_SHIFT) & GPU_CLIPPOS_Y_MASK) )

#define GPU_CLIPSIZE_WIDTH_MASK		0x3FF
#define GPU_CLIPSIZE_WIDTH_SHIFT	0
#define GPU_CLIPSIZE_HEIGHT_MASK		0xFFC00
#define GPU_CLIPSIZE_HEIGHT_SHIFT	10

#define GPU_CLIPSIZE(x, y)		(GPU_CLIPSIZE_COMMAND | \
		((x << GPU_CLIPSIZE_WIDTH_SHIFT) & GPU_CLIPSIZE_WIDTH_MASK) | \
		((y << GPU_CLIPSIZE_HEIGHT_SHIFT) & GPU_CLIPSIZE_HEIGHT_MASK) )

#define GPU_VIEWSTART_X_MASK	0x3FF
#define GPU_VIEWSTART_X_SHIFT	0
#define GPU_VIEWSTART_Y_MASK	0xFFC00
#define GPU_VIEWSTART_Y_SHIFT	10

#define GPU_VIEWSTART(x, y)						(GPU_VIEWSTART_COMMAND | \
		((x << GPU_VIEWSTART_X_SHIFT) & GPU_VIEWSTART_X_MASK) | \
		((y << GPU_VIEWSTART_Y_SHIFT) & GPU_VIEWSTART_Y_MASK) )

#define GPU_GETDATA_WIDTH_MASK		0x3FF
#define GPU_GETDATA_WIDTH_SHIFT		0
#define GPU_GETDATA_HEIGHT_MASK		0xFFC00
#define GPU_GETDATA_HEIGHT_SHIFT	10

#define GPU_GETDATA(x, y, width, height) 		(GPU_GETDATA_COMMAND | \
		((width << GPU_GETDATA_WIDTH_SHIFT) & GPU_GETDATA_WIDTH_MASK) | \
		((height << GPU_GETDATA_HEIGHT_SHIFT) & GPU_GETDATA_HEIGHT_MASK) ), \
		GPU_POINT(x, y)

#define GPU_SETDATA_WIDTH_MASK		0x3FF
#define GPU_SETDATA_WIDTH_SHIFT		0
#define GPU_SETDATA_HEIGHT_MASK		0xFFC00
#define GPU_SETDATA_HEIGHT_SHIFT	10

#define GPU_SETDATA(x, y, width, height) 		(GPU_SETDATA_COMMAND | \
		((width << GPU_SETDATA_WIDTH_SHIFT) & GPU_SETDATA_WIDTH_MASK) | \
		((height << GPU_SETDATA_HEIGHT_SHIFT) & GPU_SETDATA_HEIGHT_MASK) ), \
		GPU_POINT(x, y)

// Drawing commands
#define GPU_COMMAND_POINT						0xC0000000
#define GPU_COMMAND_LINE						0xD0000000
#define GPU_COMMAND_TRIANGLE 					0xE0000000
#define GPU_COMMAND_QUAD 						0xF0000000
#define GPU_DRAW_SHADED							0x08000000
#define GPU_DRAW_TEXTURED						0x04000000
#define GPU_DRAW_POLY							0x02000000
#define GPU_DRAW_BLENDED						0x01000000

typedef struct {
   uint32_t fifo;
   uint32_t configure;
} GPURegisters;

static volatile GPURegisters* const GPU_Registers = (GPURegisters*) (GPU_BASE + KERNEL_UNMAPPED);
